{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","querySelector","ctx","getContext","viewportWidth","Math","max","documentElement","clientWidth","window","innerWidth","viewportHeight","clientHeight","innerHeight","width","height","Circle","x","y","radius","sAngle","eAngle","fillColor","arguments","length","undefined","_classCallCheck","this","beginPath","arc","fillStyle","fill","stroke","closePath","draw","numberOfColumns","numberOfRows","fillinterval","minViewport","min","marginPercentage","isWidthLargerThanHeight","createGrid","noMarginCircleRadius","parseInt","abs","marginHorizontal","verticalCircleSpace","columns","marginVertical","rowRepresentation","drawRow","push","circle","PI","addEventListener","clearRect","grid","fillInCircles","numberOfcircles","newPosition","topIndex","rightIndex","bottomIndex","leftIndex","_loop","setTimeout","console","log","position","getNextPosition"],"mappings":"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","file":"main.9f7588d4e2c652367e26.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import \"./main.scss\";\r\n\r\nvar canvas = document.querySelector(\"canvas\");\r\n\r\nvar ctx = canvas.getContext(\"2d\");\r\nvar viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\nvar viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n\r\ncanvas.width = viewportWidth;\r\ncanvas.height = viewportHeight;\r\n\r\nclass Circle {\r\n    constructor(x, y, radius, sAngle, eAngle, fillColor = 'white') {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.sAngle = sAngle;\r\n        this.eAngle = eAngle;\r\n        this.fillColor = fillColor;\r\n    }\r\n\r\n    draw() {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, this.sAngle, this.eAngle);\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    fill() {\r\n        // as there is only one context we need to just draw a new circle\r\n        // in order for us to \"fill\" the circle\r\n        new Circle(this.x, this.y, this.radius, this.sAngle, this.eAngle, 'black').draw();\r\n    }\r\n}\r\n\r\nconst numberOfColumns = 30;\r\nconst numberOfRows = 30;\r\nconst fillinterval = 10;\r\nlet radius;\r\nconst minViewport = Math.min(viewportHeight, viewportWidth);\r\nconst marginPercentage = 30;\r\nconst isWidthLargerThanHeight = viewportWidth > viewportHeight;\r\n\r\nwindow.addEventListener('resize', () => {\r\n    ctx.clearRect(0, 0, viewportWidth, viewportHeight);\r\n    createGrid();\r\n});\r\n\r\nfunction createGrid() {\r\n    viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n    viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    \r\n    const noMarginCircleRadius = (parseInt(Math.abs(minViewport) / numberOfColumns)) / 2;\r\n    radius = noMarginCircleRadius - ((noMarginCircleRadius / 100) * marginPercentage);\r\n    \r\n    const marginHorizontal = isWidthLargerThanHeight ? (viewportWidth - ((radius * 2) * numberOfColumns)) / (numberOfColumns + 1) : 2;\r\n    \r\n    const verticalCircleSpace = (radius * 2) * numberOfRows;\r\n    const totalVerticalMargin = Math.abs(innerHeight - verticalCircleSpace);\r\n    const columns = [];\r\n    const marginVertical = totalVerticalMargin / (numberOfRows + 1);\r\n    for (let i = 0; i < numberOfRows; i++) {\r\n        let y;\r\n        if (i === 0) {\r\n            y = (radius + marginVertical) * (i + 1);\r\n        } else {\r\n            y = (radius + marginVertical) + ((radius * 2) + marginVertical) * (i);\r\n        }\r\n        const rowRepresentation = drawRow(y, radius, marginHorizontal);\r\n        columns.push(rowRepresentation);\r\n    }\r\n\r\n    return columns;\r\n}\r\n\r\n\r\n\r\nfunction drawRow(y, radius, marginHorizontal) {\r\n    const rowRepresentation = [];\r\n    for (let i = 0; i < numberOfColumns; i++) {\r\n        let x;\r\n        if (i === 0) {\r\n            x = (radius + marginHorizontal) * (i + 1);\r\n        } else {\r\n            x = (radius + marginHorizontal) + ((radius * 2) + marginHorizontal) * (i);\r\n        }\r\n\r\n        const circle = new Circle(x, y, radius, 0, 2 * Math.PI);\r\n        circle.draw();\r\n        rowRepresentation.push(circle);\r\n    }\r\n\r\n    return rowRepresentation;\r\n}\r\n\r\nconst grid = createGrid();\r\nconsole.log(grid);\r\nfunction fillInCircles() {\r\n    const numberOfcircles = numberOfColumns * numberOfRows;\r\n\r\n    let newPosition = {\r\n        x: 0,\r\n        y: 0,\r\n    }\r\n\r\n    grid[newPosition.y][newPosition.x].fill();\r\n\r\n    let topIndex = 0;\r\n    let rightIndex = numberOfColumns;\r\n    let bottomIndex = numberOfRows;\r\n    let leftIndex = 0;\r\n\r\n    for (let i = 1; i < numberOfcircles; i++) {\r\n        setTimeout(() => {\r\n            if (newPosition.x === leftIndex && newPosition.y === topIndex + 1) {\r\n                console.log(999999999);\r\n\r\n                topIndex++;\r\n                rightIndex--;\r\n                bottomIndex--;\r\n                leftIndex++\r\n            }\r\n            newPosition = getNextPosition(newPosition, topIndex, rightIndex, bottomIndex, leftIndex);\r\n            console.log(`New position: ${newPosition.x}, ${newPosition.y}`);\r\n            console.log(i);\r\n            if (i !== numberOfcircles - 1) {\r\n                grid[newPosition.y][newPosition.x].fill();\r\n            } else {\r\n                //blinkLastCircle(grid[newPosition.y][newPosition.x]);\r\n            }\r\n        }, fillinterval * i);\r\n    }\r\n}\r\nsetTimeout(() => {\r\n    fillInCircles();\r\n}, 1000);\r\n//grid[1][1].fill();\r\n\r\nfunction getNextPosition(position, topIndex, rightIndex, bottomIndex, leftIndex) {\r\n    console.log(`Current position: ${position.x}, ${position.y}`);\r\n\r\n    const newPosition = {};\r\n\r\n    console.log(topIndex);\r\n\r\n    console.log(position.y === topIndex);\r\n    console.log(position.x < rightIndex - 1);\r\n\r\n    if (position.x < rightIndex - 1 && position.y === topIndex) {\r\n        console.log('top');\r\n        newPosition.x = position.x + 1;\r\n        newPosition.y = position.y;\r\n    } else if (position.x === rightIndex - 1 && position.y < bottomIndex - 1) {\r\n        console.log('right');\r\n        newPosition.x = position.x;\r\n        newPosition.y = position.y + 1;\r\n    } else if (position.x > leftIndex && position.y === bottomIndex - 1) {\r\n        console.log('bottom');\r\n        newPosition.x = position.x - 1;\r\n        newPosition.y = position.y;\r\n    } else if (position.x === leftIndex && position.y > topIndex) {\r\n        console.log('left');\r\n        newPosition.x = position.x;\r\n        newPosition.y = position.y - 1;\r\n    }\r\n\r\n    return newPosition;\r\n}\r\n\r\n//blinkLastCircle(grid[0][0]);\r\n\r\nfunction blinkLastCircle(circle) {\r\n    const fps = 60;\r\n    setInterval(function () {\r\n        if (parseInt(Math.random() * 10) === parseInt(Math.random() * 10)) {\r\n            ctx.clearRect(circle.x - radius * 1.1, circle.y - radius * 1.1, radius * 2.2, radius * 2.2);\r\n        }\r\n        if (parseInt(Math.random() * 10) === parseInt(Math.random() * 10)) {\r\n            circle.fill();            \r\n        }\r\n    }, 1000 / fps);\r\n}"],"sourceRoot":""}